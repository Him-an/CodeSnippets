<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>var fetchedResultsController: NSFetchedResultsController!
    var fetchedRequest : NSFetchRequest!
    var sectionNameKeyPath: String?
    private let cacheName    = "cachePerson"
lazy var nameSortDescriptor: NSSortDescriptor = {
        var sd = NSSortDescriptor(key: "name",
                                  ascending: true,
                                  selector: #selector(NSString.localizedStandardCompare(_:)))
        return sd
    }()
    
    func createFetchRequest() -&gt; NSFetchRequest {
        let fetchedRequest = NSFetchRequest(entityName: "Person")
        fetchedRequest.sortDescriptors = [nameSortDescriptor]
        return fetchedRequest
    }


func initializeFetchedResultsController(request: NSFetchRequest, sectionNameKeyPath: String) {
        let moc = self.dataController.context
        fetchedResultsController = NSFetchedResultsController(fetchRequest: request, managedObjectContext: moc, sectionNameKeyPath: sectionNameKeyPath, cacheName: cacheName)
        fetchedResultsController.delegate = self
        
        do {
            try fetchedResultsController.performFetch()
        } catch {
            fatalError("Failed to initialize FetchedResultsController: \(error)")
        }

    }

extension PersonsTVC: NSFetchedResultsControllerDelegate {
    
    func controllerWillChangeContent(controller:
        NSFetchedResultsController) {
        tableView.beginUpdates()
    }
    
    func controller(controller: NSFetchedResultsController,
                    didChangeObject anObject: AnyObject,
                                    atIndexPath indexPath: NSIndexPath?,
                                                forChangeType type: NSFetchedResultsChangeType,
                                                              newIndexPath: NSIndexPath?) {
        
        switch type {
        case .Insert:
            tableView.insertRowsAtIndexPaths([newIndexPath!],
                                             withRowAnimation: .Automatic)
        case .Delete:
            tableView.deleteRowsAtIndexPaths([indexPath!],
                                             withRowAnimation: .Automatic)
        case .Update:
            let cell = tableView.cellForRowAtIndexPath(indexPath!)
            configureCell(cell!, indexPath: indexPath!)
        case .Move:
            tableView.deleteRowsAtIndexPaths([indexPath!],
                                             withRowAnimation: .Automatic)
            tableView.insertRowsAtIndexPaths([newIndexPath!],
                                             withRowAnimation: .Automatic)
        }
    }
    
    func controllerDidChangeContent(controller:
        NSFetchedResultsController) {
        tableView.endUpdates()
    }
    
    func controller(controller: NSFetchedResultsController,
                    didChangeSection sectionInfo: NSFetchedResultsSectionInfo,
                                     atIndex sectionIndex: Int,
                                             forChangeType type: NSFetchedResultsChangeType) {
        
        let indexSet = NSIndexSet(index: sectionIndex)
        
        switch type {
        case .Insert:
            tableView.insertSections(indexSet,
                                     withRowAnimation: .Automatic)
        case .Delete:
            tableView.deleteSections(indexSet,
                                     withRowAnimation: .Automatic)
        default :
            break
        }
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>A0CC7BDE-3501-4811-A845-81A6EF0A65B3</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift: CoreData / Init FetchedResultsController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
